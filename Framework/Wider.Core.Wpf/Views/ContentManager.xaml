<UserControl 
    x:Class="Wider.Core.Views.ContentManager"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:Wider.Core"
    xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
    xmlns:Converter="clr-namespace:Wider.Core.Converters"

    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800">
    <!--The magical avalon dock-->
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary x:Name="ThemeDictionary">
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/Wider.Core;component/Styles/ControlStyle.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/Wider.Core;component/Styles/ToolbarStyle.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <avalonDock:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <Converter:ActiveDocumentConverter x:Key="ActiveDocumentConverter" />
            <Converter:NullObjectToVisibiltyConverter x:Key="nullToVisibilityConverter" />
            <Converter:BoolToInsertModeConverter x:Key="booleanToInsertModeConverter" />
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <avalonDock:DockingManager 
        x:Name="dockManager" 
        AnchorablesSource="{Binding Tools}"
        DocumentsSource="{Binding Documents}"
        ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}" 
        ActiveContentChanged="DockManager_ActiveContentChanged">
        <!--<avalonDock:DockingManager.Theme>
                    <avalonDock:VS2012Theme />
                </avalonDock:DockingManager.Theme>-->
        <avalonDock:DockingManager.LayoutItemTemplateSelector>
            <local:PanesTemplateSelector>
                <local:PanesTemplateSelector.ContentViewTemplate>
                    <DataTemplate>
                        <ContentPresenter Content="{Binding View, UpdateSourceTrigger=PropertyChanged}" />
                    </DataTemplate>
                </local:PanesTemplateSelector.ContentViewTemplate>
                <local:PanesTemplateSelector.ToolViewTemplate>
                    <DataTemplate>
                        <ContentPresenter Content="{Binding View, UpdateSourceTrigger=PropertyChanged}" />
                    </DataTemplate>
                </local:PanesTemplateSelector.ToolViewTemplate>
            </local:PanesTemplateSelector>
        </avalonDock:DockingManager.LayoutItemTemplateSelector>

        <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
            <local:PanesStyleSelector>
                <local:PanesStyleSelector.ToolStyle>
                    <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
                        <Setter Property="Title" Value="{Binding Model.Title, Mode=OneWay}" />
                        <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                        <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}" />
                        <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                        <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                        <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                    </Style>
                </local:PanesStyleSelector.ToolStyle>
                <local:PanesStyleSelector.ContentStyle>
                    <Style TargetType="{x:Type avalonDock:LayoutItem}">
                        <Setter Property="Title" Value="{Binding Model.Title, Mode=OneWay}" />
                        <Setter Property="ToolTip" Value="{Binding Model.Tooltip}" />
                        <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                        <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                        <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                    </Style>
                </local:PanesStyleSelector.ContentStyle>
            </local:PanesStyleSelector>
        </avalonDock:DockingManager.LayoutItemContainerStyleSelector>
        <avalonDock:DockingManager.LayoutUpdateStrategy>
            <local:LayoutInitializer />
        </avalonDock:DockingManager.LayoutUpdateStrategy>

        <avalonDock:LayoutRoot>
            <avalonDock:LayoutPanel x:Name="VerticalPanel" Orientation="Vertical">
                <avalonDock:LayoutPanel x:Name="HorizontalPanel" Orientation="Horizontal">
                    <avalonDock:LayoutDocumentPane />
                </avalonDock:LayoutPanel>
            </avalonDock:LayoutPanel>
        </avalonDock:LayoutRoot>
    </avalonDock:DockingManager>
</UserControl>
