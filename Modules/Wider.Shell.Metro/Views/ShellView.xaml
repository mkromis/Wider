<Controls:MetroWindow 
    x:Class="Wider.Shell.Metro.Views.ShellView" x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
    xmlns:Core="clr-namespace:Wider.Core;assembly=Wider.Core"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
    xmlns:Converter="clr-namespace:Wider.Core.Converters;assembly=Wider.Core"
    xmlns:prism ="http://prismlibrary.com/"
    xmlns:Utils="clr-namespace:Wider.Utils;assembly=Wider.Core"
    TitleForeground="#FF717171" 
    TitleCaps="False" 
    Title="{Binding Title}" 
    Icon="{Binding Icon}" 
    WindowTransitionsEnabled="False" 
    ResizeMode="CanResizeWithGrip"
    GlowBrush="{Binding ElementName=WiderStatusBar, Path=Background}"
    Closing="Window_Closing_1">
    <!--xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"-->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary x:Name="ThemeDictionary">
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/Wider.Shell.Metro;component/Styles/VS2012/LightColors.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/Wider.Shell.Metro;component/Styles/VS2012/LightTheme.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <avalonDock:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <Converter:ActiveDocumentConverter x:Key="ActiveDocumentConverter" />
            <Converter:NullObjectToVisibiltyConverter x:Key="nullToVisibilityConverter" />
            <Converter:BoolToInsertModeConverter x:Key="booleanToInsertModeConverter" />
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
            <Utils:DatabindingDebugConverter x:Key="bindDebug" />
        </ResourceDictionary>
    </Window.Resources>

    <!--<i:Interaction.Behaviors>-->
        <!--<behaviours:BorderlessWindowBehavior ResizeWithGrip="True" AllowsTransparency="False" />-->
        <!--<behaviours:GlowWindowBehavior />-->
    <!--</i:Interaction.Behaviors>-->

    <Border>
        <DockPanel>
            <!--Menu-->
            <Menu DockPanel.Dock="Top" IsMainMenu="True" x:Name="mainMenu" VerticalAlignment="Top" 
                  ItemContainerStyle="{DynamicResource MetroMenuStyle}"
                  ItemsSource="{Binding Path=Menus, UpdateSourceTrigger=PropertyChanged}" />
            <!--Toolbar (can we improve this?)-->
            <ContentControl Content="{Binding ToolBarTray}" DockPanel.Dock="Top" />

            <!--Status bar-->
            <ItemsControl Name="StatusBar" DockPanel.Dock="Bottom" prism:RegionManager.RegionName="StatusBar" />

            <!--The magical avalon dock-->
            <avalonDock:DockingManager 
                x:Name="dockManager" AnchorablesSource="{Binding Tools}"
                DocumentsSource="{Binding Documents}"
                ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}">
                <!--<avalonDock:DockingManager.Theme>
                    <avalonDock:VS2012Theme />
                </avalonDock:DockingManager.Theme>-->
                
                <!--<avalonDock:DockingManager.DocumentContextMenu>
                    <ContextMenu ItemsSource="{Binding Path=Model.Menus, Converter={StaticResource ResourceKey=bindDebug}}" Style="{StaticResource MetroContextMenu}" ItemContainerStyle="{StaticResource MetroMenuItem}" BorderBrush="{DynamicResource ControlOpenColorBrush}" Background="{DynamicResource ControlOpenColorBrush}" />
                </avalonDock:DockingManager.DocumentContextMenu>
                
                <avalonDock:DockingManager.AnchorableContextMenu>
                    <ContextMenu ItemsSource="{Binding Path=Model.Menus, Converter={StaticResource ResourceKey=bindDebug}}" Style="{StaticResource {x:Type ContextMenu}}"  ItemContainerStyle="{StaticResource {x:Type MenuItem}}"/>
                </avalonDock:DockingManager.AnchorableContextMenu>-->

                <avalonDock:DockingManager.LayoutItemTemplateSelector>
                    <Core:PanesTemplateSelector>
                        <Core:PanesTemplateSelector.ContentViewTemplate>
                            <DataTemplate>
                                <ContentPresenter Content="{Binding Path=View, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            </DataTemplate>
                        </Core:PanesTemplateSelector.ContentViewTemplate>
                        <Core:PanesTemplateSelector.ToolViewTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding Path=View}" IsVisibleChanged="ContentControl_IsVisibleChanged" />
                            </DataTemplate>
                        </Core:PanesTemplateSelector.ToolViewTemplate>
                    </Core:PanesTemplateSelector>
                </avalonDock:DockingManager.LayoutItemTemplateSelector>

                <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                    <Core:PanesStyleSelector>
                        <Core:PanesStyleSelector.ToolStyle>
                            <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
                                <Setter Property="Title" Value="{Binding Model.Title, Mode=OneWay}" />
                                <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                                <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}" />
                                <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                                <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                                <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                            </Style>
                        </Core:PanesStyleSelector.ToolStyle>
                        <Core:PanesStyleSelector.ContentStyle>
                            <Style TargetType="{x:Type avalonDock:LayoutItem}">
                                <Setter Property="Title" Value="{Binding Model.Title, Mode=OneWay}" />
                                <Setter Property="ToolTip" Value="{Binding Model.Tooltip}" />
                                <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                                <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                                <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                            </Style>
                        </Core:PanesStyleSelector.ContentStyle>
                    </Core:PanesStyleSelector>
                </avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                <avalonDock:DockingManager.LayoutUpdateStrategy>
                    <Core:LayoutInitializer />
                </avalonDock:DockingManager.LayoutUpdateStrategy>

                <avalonDock:LayoutRoot>
                    <avalonDock:LayoutPanel x:Name="VerticalPanel" Orientation="Vertical">
                        <avalonDock:LayoutPanel x:Name="HorizontalPanel" Orientation="Horizontal">
                            <avalonDock:LayoutDocumentPane />
                        </avalonDock:LayoutPanel>
                    </avalonDock:LayoutPanel>
                </avalonDock:LayoutRoot>
            </avalonDock:DockingManager>
        </DockPanel>
    </Border>
</Controls:MetroWindow>