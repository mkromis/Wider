<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    x:Class="Wider.Content.NodeEditor.Views.Node"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:views="clr-namespace:Wider.Content.NodeEditor.Views"
    Width="120" Height="60">
    <Grid >
        <!-- This rectangle is the main visual for the node. -->
        <Rectangle
            Stroke="Black"
            Fill="White"
            RadiusX="4"
            RadiusY="4"
            />
        <Grid Margin="-8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*" MinWidth="10" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" MinHeight="10" />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock
                Grid.Column="1"
                Grid.Row="1"
                Text="{Binding Name}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                />
            <!-- ...Define the nodes four connectors, one on each edge of the node -->
            <views:Connector Grid.Row="0" Grid.Column="1" DataContext="{Binding Connectors[0]}" />
            <views:Connector Grid.Row="1" Grid.Column="0" DataContext="{Binding Connectors[1]}" />
            <views:Connector Grid.Row="1" Grid.Column="2" DataContext="{Binding Connectors[2]}" />
            <views:Connector Grid.Row="2" Grid.Column="1" DataContext="{Binding Connectors[3]}" />
        </Grid>
    </Grid>
    <!-- Default style and control-template for 'NodeItem'. -->
    <!--<Style 
        TargetType="{x:Type local:NodeItem}"
        >

        --><!-- Data-bind the parent NetworkView. --><!--
        <Setter
            Property="ParentNetworkView"
            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NetworkView}}, Path=.}"
            />

        --><!-- Set the position of the node within the canvas. --><!--
        <Setter
            Property="Canvas.Left"
            Value="{Binding X, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
            />
        <Setter
            Property="Canvas.Top"
            Value="{Binding Y, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
            />

        --><!-- Set the z-order of the node within the canvas. --><!--
        <Setter
            Property="Canvas.ZIndex"
            Value="{Binding ZIndex, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
            />

        --><!-- Set defaults for background and border. --><!--
        <Setter 
            Property="Background" 
            Value="Transparent" 
            />
        <Setter 
            Property="BorderBrush" 
            Value="Transparent" 
            />
        <Setter 
            Property="BorderThickness" 
            Value="1" 
            />

        --><!-- The control-template for the node. --><!--
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                    TargetType="{x:Type local:NodeItem}"
                    >
                    <Grid>

                        --><!-- 
                        This border indicates that node is selected.
                        Normally it is transparent, but when 'IsSelected' is set
                        to 'true' the border brush becomes blue and its background
                        becomds light blue.
                        --><!--
                        <Border
                            x:Name="selectionBorder"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="2"
                            >

                            --><!-- 
                            User-defined node content is presented here. 
                            --><!--
                            <ContentPresenter />

                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger 
                            Property="IsSelected"
                            Value="True"
                            >

                            --><!-- When the node is selected, set the color of 'selectionBorder' to blue. --><!--
                            <Setter
                                TargetName="selectionBorder"
                                Property="BorderBrush"
                                Value="{StaticResource selectionBorderColor}"
                                />
                        </Trigger>

                        <Trigger 
                            Property="IsSelected"
                            Value="True"
                            >

                            --><!-- When the node is selected, set the background of 'selectionBorder' to light blue. --><!--
                            <Setter
                                TargetName="selectionBorder"
                                Property="Background"
                                Value="{StaticResource selectionBorderBackgroundColor}"
                                />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
</UserControl>
